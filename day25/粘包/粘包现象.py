# 连续发送的两条消息，成为了一条消息发送过去
# 发送消息 缓存机制  不一一发 浪费时间
# 可能发生在 发送端 和 接收端
# 粘包现象只发生在TCP协议中， 因为tcp多条消息之间没有边界
# 发送端：两条消息很短，发送时间间隔也很短
# 接收端：多条消息由于没有及时接收，而在接收方的缓存短堆在一起导致的粘包
# 导致粘包的本质：设置边界。你发多少，我就接多少。
# 做一个自定义长度协议
# 宪法一个长度，我们规定长度的为4个字节
# 然后对面接收4个字节，把长度得到， 然后接收固定长度的数据
# zfil()自动在左边补零
# num = 6
# s = str(num)
# res = s.zfill(4)
# print(res)  # 0006
import struct

num = 12345
ret = struct.pack('i', num)
print(ret)  # b'90\x00\x00'

re = struct.unpack('i', ret)
print(re)  # (12345,)

